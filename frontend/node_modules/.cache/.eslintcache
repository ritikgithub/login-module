[{"/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/index.tsx":"1","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/reportWebVitals.ts":"2","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/serviceWorkerRegistration.ts":"3","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/App.tsx":"4","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Login.tsx":"5","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Register.tsx":"6","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/ForgotPassword.tsx":"7","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Home.tsx":"8","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Profile.tsx":"9","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/EditProfile.tsx":"10"},{"size":1432,"mtime":1621521805717,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1620769822000,"results":"13","hashOfConfig":"12"},{"size":5256,"mtime":1620769822000,"results":"14","hashOfConfig":"12"},{"size":2205,"mtime":1622189881573,"results":"15","hashOfConfig":"12"},{"size":2665,"mtime":1621934128008,"results":"16","hashOfConfig":"12"},{"size":3714,"mtime":1622188737345,"results":"17","hashOfConfig":"12"},{"size":5457,"mtime":1622185956781,"results":"18","hashOfConfig":"12"},{"size":661,"mtime":1622186321274,"results":"19","hashOfConfig":"12"},{"size":1550,"mtime":1622188571062,"results":"20","hashOfConfig":"12"},{"size":4519,"mtime":1622190092712,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"cs7cfm",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/index.tsx",[],["49","50"],"/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/reportWebVitals.ts",[],"/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/serviceWorkerRegistration.ts",[],"/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/App.tsx",["51","52"],"import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport Register from './pages/Register';\nimport ForgotPassword from './pages/ForgotPassword';\nimport Profile from './pages/Profile';\nimport EditProfile from './pages/EditProfile';\nimport { useEffect, useState } from 'react';\n\nconst App: React.FC = () => {\n  const [LoggedIn, setLoggedIn] = useState(false);\n  const [user, setuser] = useState({});\n  let resStatus = 0;\n  useEffect(() => {\n    fetch(\"http://192.168.43.228:5000/isAuthenticated\", {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => { resStatus = res.status; return res.json() })\n      .then(res => {\n        if (resStatus == 200) {\n          setLoggedIn(true);\n          setuser(res.user);\n        }\n      });\n  }, [])\n  return (\n    <IonApp>\n      <IonReactRouter>\n        <IonRouterOutlet>\n          \n          <Route exact path=\"/\" render={(props)=> LoggedIn ? <Home {...props} setLoggedIn={setLoggedIn} />  : <Redirect to=\"/login\" /> } />\n         \n          <Route exact path=\"/login\" render={(props) => LoggedIn ? <Redirect to=\"/\" /> : <Login {...props} setLoggedIn={setLoggedIn} setuser={setuser} /> } />\n          {/* <Route exact path=\"/profile\">\n            {LoggedIn ? <Profile user={user} setuser={setuser} /> : <Redirect to=\"/\" />}\n          </Route> */}\n          <Route exact path=\"/profile\" render={(props) => LoggedIn ? <Profile {...props} user={user} setuser={setuser} /> : <Redirect to=\"/\" /> } />\n          <Route exact path=\"/editProfile\" render={(props) => LoggedIn ? <EditProfile {...props} user={user} setuser={setuser} /> : <Redirect to=\"/\" /> } />\n         \n          <Route exact path=\"/register\">\n            {LoggedIn ? <Redirect to=\"/\" /> : <Register />}\n          </Route>\n          <Route exact path=\"/forgotpassword\" render={(props)=> LoggedIn ? <Redirect to =\"/\" /> : <ForgotPassword />} />\n        \n        </IonRouterOutlet>\n      </IonReactRouter>\n\n    </IonApp>\n  );\n}\n\nexport default App;\n","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Login.tsx",["53","54","55","56","57","58"],"import { IonButton, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonPage, IonRouterLink, IonTitle, IonToast, IonToolbar } from '@ionic/react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\n\ninterface Login {\n  setLoggedIn : Function,\n  setuser: Function\n}\nconst Login: React.FC<Login> = ({setLoggedIn, setuser})  => {\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [showToast, setshowToast] = useState(false);\n  const [toastMessage, settoastmessage] = useState(\"\");\n  const [toastType, settoastType] = useState(\"\");\n  let history = useHistory();\n\n  const LoginHandler = () => {\n    if (email == \"\" || password == \"\") {\n      settoastType(\"danger\");\n      settoastmessage(\"All fields are mandatory\");\n      setshowToast(true);\n      return;\n    }\n    let resStatus = 0;\n    fetch(\"http://192.168.43.228:5000/login\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email, password })\n    }).then(res => { resStatus = res.status; return res.json() })\n      .then(res => {\n        if (resStatus == 200) {\n          settoastType(\"success\");\n          settoastmessage(res.message);\n          setshowToast(true);\n          localStorage.setItem('token', res.token);\n          setLoggedIn(true);\n          setuser(res.user);\n        }\n        else {\n          settoastType(\"danger\");\n          settoastmessage(res.error);\n          setshowToast(true);\n        }\n      });\n  }\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Login</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"ion-padding-top\">\n        <IonItem>\n          <IonLabel position=\"stacked\">Email</IonLabel>\n          <IonInput value={email} onIonChange={(e) => setemail(e.detail.value)}></IonInput>\n        </IonItem>\n        <IonItem>\n          <IonLabel position=\"stacked\">Password</IonLabel>\n          <IonInput type=\"password\" value={password} onIonChange={(e) => setpassword(e.detail.value)}></IonInput>\n        </IonItem>\n        <IonButton size=\"default\" expand=\"block\" onClick={LoginHandler} color=\"primary\">Login</IonButton>\n        <IonButton fill=\"clear\" routerLink=\"/register\">Create a New Account??</IonButton>\n        <IonButton fill=\"clear\" routerLink=\"/forgotpassword\">Forgot Password?</IonButton>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setshowToast(false)}\n          message={toastMessage}\n          duration={2000}\n          color={toastType}\n        />\n      </IonContent>\n\n    </IonPage>\n  );\n};\n\nexport default Login;\n","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Register.tsx",["59","60","61","62","63","64"],"import { IonButton, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonPage, IonSelect, IonSelectOption, IonTitle, IonToast, IonToolbar } from '@ionic/react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nconst Register: React.FC = () => {\n  const [name, setname] = useState(\"\");\n  const [age, setage] = useState<string>();\n  const [gender, setgender] = useState(\"\");\n  const [email, setemail] = useState(\"\")\n  const [confirmpassword, setconfirmpassword] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [showToast, setshowToast] = useState(false);\n  const [toastMessage, settoastmessage] = useState(\"\");\n  const [toastType, settoastType] = useState(\"\");\n  let history = useHistory();\n\n  const RegisterHandler = () => {\n    if (name == \"\" || email == \"\" || password == \"\" || confirmpassword == \"\") {\n      settoastType(\"danger\");\n      settoastmessage(\"All fields are mandatory\");\n      setshowToast(true);\n      return;\n    }\n    if (password != confirmpassword) {\n      settoastType(\"danger\");\n      settoastmessage(\"password should be matched\");\n      setshowToast(true);\n      return;\n    }\n\n    let resStatus = 0;\n    fetch(\"http://192.168.43.228:5000/register\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ name, email, password, age, gender })\n    }).then(res => { resStatus = res.status; return res.json() })\n      .then(res => {\n        if (resStatus == 200) {\n          settoastType(\"success\");\n          settoastmessage(res.message);\n          setshowToast(true);\n          history.push(\"/login\");\n        }\n        else {\n          settoastType(\"danger\");\n          settoastmessage(res.error);\n          setshowToast(true);\n        }\n      });\n  }\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Register</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"ion-padding-top\">\n        <IonItem>\n          <IonLabel position=\"stacked\">Name</IonLabel>\n          <IonInput value={name} onIonChange={(e) => setname(e.detail.value)}></IonInput>\n        </IonItem>\n        <IonItem>\n          <IonLabel position=\"stacked\">Email</IonLabel>\n          <IonInput value={email} onIonChange={(e) => setemail(e.detail.value)}></IonInput>\n        </IonItem>\n        <IonItem>\n          <IonLabel position=\"stacked\">Age</IonLabel>\n          <IonInput value={age} onIonChange={(e) => setage(e.detail.value)}></IonInput>\n        </IonItem>\n        <IonItem>\n          <IonLabel position=\"stacked\">Gender</IonLabel>\n          <IonSelect value={gender} placeholder=\"Select One\" onIonChange={e => setgender(e.detail.value)}>\n            <IonSelectOption value=\"female\">Female</IonSelectOption>\n            <IonSelectOption value=\"male\">Male</IonSelectOption>\n          </IonSelect>\n        </IonItem>\n        <IonItem>\n          <IonLabel position=\"stacked\">Password</IonLabel>\n          <IonInput type=\"password\" value={password} onIonChange={(e) => setpassword(e.detail.value)}></IonInput>\n        </IonItem>\n        <IonItem>\n          <IonLabel position=\"stacked\">Confirm Password</IonLabel>\n          <IonInput type=\"password\" value={confirmpassword} onIonChange={(e) => setconfirmpassword(e.detail.value)}></IonInput>\n        </IonItem>\n        <IonButton size=\"default\" expand=\"block\" onClick={RegisterHandler} color=\"primary\">Register</IonButton>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setshowToast(false)}\n          message={toastMessage}\n          duration={2000}\n          color={toastType}\n        />\n      </IonContent>\n\n    </IonPage>\n  );\n};\n\nexport default Register;\n","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/ForgotPassword.tsx",["65","66","67","68","69","70","71","72","73"],"import { IonButton, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonSpinner, IonTitle, IonToast, IonToolbar, useIonViewWillEnter } from '@ionic/react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nconst ForgotPassword: React.FC = () => {\n  console.log(\"Rerend frogotpassword\");\n  const [token, settoken] = useState(\"\")\n  const [email, setemail] = useState(\"\")\n  const [newpassword, setnewpassword] = useState(\"\");\n  const [confirmpassword, setconfirmpassword] = useState(\"\");\n\n  const [showToast, setshowToast] = useState(false);\n  const [toastMessage, settoastmessage] = useState(\"\");\n  const [toastType, settoastType] = useState(\"\");\n\n  const [emailSending, setemailSending] = useState(false);\n  const [emailSent, setemailSent] = useState(false);\n  const [passwordChanged, setpasswordChanged] = useState(false);\n  let history = useHistory();\n\n  function resetfields() {\n    setemailSent(false);\n    setemailSending(false);\n    setpasswordChanged(false);\n    settoken(\"\");\n    setnewpassword(\"\");\n    setconfirmpassword(\"\");\n    setemail(\"\");\n  }\n\n  // useIonViewWillEnter(() => {\n  //   resetfields();\n  // });\n\n  let component;\n  function renderComponent() {\n\n    if (!emailSending && !emailSent) {\n      console.log(\"sd\");\n      component = sendToken();\n    }\n\n    else if (passwordChanged)\n      component = passwordChangedSuccessfully();\n    else if (emailSent)\n      component = resetpassword();\n\n  }\n  renderComponent();\n\n  function sendTokenHandler() {\n    if (email == \"\") {\n      settoastType(\"danger\");\n      settoastmessage(\"Email should not be empty\");\n      setshowToast(true);\n      return;\n    }\n    let resStatus = 0;\n    setemailSending(true);\n    fetch(\"http://192.168.43.228:5000/sendForgotPasswordToken\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email })\n    }).then(res => { resStatus = res.status; return res.json() })\n      .then(res => {\n        if (resStatus == 200) {\n          settoastType(\"success\");\n          settoastmessage(res.message);\n          setshowToast(true);\n          setemailSent(true);\n          setemailSending(false);\n        }\n        else {\n          settoastType(\"danger\");\n          settoastmessage(res.error);\n          setshowToast(true);\n          setemailSending(false);\n        }\n      });\n  }\n\n  function sendToken() {\n    return (<div>\n      <IonItem>\n        <IonLabel position=\"stacked\">Email</IonLabel>\n        <IonInput value={email} onIonChange={(e) => setemail(e.detail.value)}></IonInput>\n      </IonItem>\n      <IonButton size=\"default\" expand=\"block\" onClick={sendTokenHandler} color=\"primary\">Send Reset Token</IonButton>\n    </div>\n    )\n  }\n\n  function resetPasswordHandler() {\n    if (token == \"\" || newpassword == \"\") {\n      settoastType(\"danger\");\n      settoastmessage(\"All fields are mandatory\");\n      setshowToast(true);\n      return;\n    }\n    if (newpassword !== confirmpassword) {\n      settoastType(\"danger\");\n      settoastmessage(\"Passwords Should be Matched\");\n      setshowToast(true);\n      return;\n    }\n\n    let resStatus = 0;\n    fetch(\"http://192.168.43.228:5000/verifyForgotPasswordDetails\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ token, password: newpassword })\n    }).then(res => { resStatus = res.status; return res.json() })\n      .then(res => {\n        if (resStatus == 200) {\n          settoastType(\"success\");\n          settoastmessage(res.message);\n          setshowToast(true);\n          setpasswordChanged(true);\n        }\n        else {\n          settoastType(\"danger\");\n          settoastmessage(res.error);\n          setshowToast(true);\n        }\n      });\n  }\n\n  \n\n  function passwordChangedSuccessfully() {\n    return (\n      <div>\n        <div className=\"text-primary h3\">\n          Password Changed Successfully\n        </div>\n        <IonButton routerLink=\"/login\" fill=\"clear\">Go to Login Page</IonButton>\n      </div>\n    )\n  }\n\n  function resetpassword() {\n    return (<div>\n      <IonItem>\n        <IonLabel position=\"stacked\">Token</IonLabel>\n        <IonInput value={token} onIonChange={(e) => settoken(e.detail.value)}></IonInput>\n      </IonItem>\n      <IonItem>\n        <IonLabel position=\"stacked\">New Password</IonLabel>\n        <IonInput value={newpassword} onIonChange={(e) => setnewpassword(e.detail.value)}></IonInput>\n      </IonItem>\n      <IonItem>\n        <IonLabel position=\"stacked\">Confrim Password</IonLabel>\n        <IonInput value={confirmpassword} onIonChange={(e) => setconfirmpassword(e.detail.value)}></IonInput>\n      </IonItem>\n      <IonButton size=\"default\" expand=\"block\" onClick={resetPasswordHandler} color=\"primary\">Set Password</IonButton>\n    \n    </div>)\n  }\n\n\n  // function spinner() {\n  //   return <IonSpinner name=\"crescent\" />\n  // }\n\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Forgot Password</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"ion-padding-top\">\n\n\n        {component}\n\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setshowToast(false)}\n          message={toastMessage}\n          duration={2000}\n          color={toastType}\n        />\n          <IonLoading isOpen={emailSending} />\n      </IonContent>\n\n    </IonPage>\n  );\n};\n\nexport default ForgotPassword;","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Home.tsx",[],"/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Profile.tsx",["74","75","76","77","78"],"import { IonBackButton, IonButton, IonButtons, IonContent, IonFab, IonFabButton, IonHeader, IonIcon, IonInput, IonItem, IonLabel, IonPage, IonTitle, IonToast, IonToolbar } from '@ionic/react'\nimport React from 'react'\nimport { createOutline } from 'ionicons/icons';\n\nconst Profile: React.FC<any> = ({ user, setuser }) => {\n    console.log(\"Rerenders\");\n    return (\n        <IonPage>\n            <IonHeader>\n                <IonToolbar>\n                    <IonButtons slot=\"start\">\n                        <IonBackButton></IonBackButton>\n                    </IonButtons>\n                    <IonTitle>Profile</IonTitle>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <div className=\"text-center mt-3\">\n                    <img src={`http://192.168.43.228:5000/${user.avatar}`} alt=\"\" style={{ height: \"200px\", width: \"200px\", borderRadius: \"50%\" }}></img>\n                    <div className=\"h4 mt-3 text-primary\">{user.name}</div>\n                    {user.age && <div className=\"h4 mt-3 text-primary\">{`${user.age} years old`}</div> }\n                    <div className=\"h4 mt-3 text-primary\">{user.gender}</div>\n                </div>\n              \n              \n\n                <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n                    <IonFabButton routerLink=\"/editProfile\">\n                        <IonIcon icon={createOutline} />\n                    </IonFabButton>\n                </IonFab>\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default Profile\n","/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/EditProfile.tsx",["79","80","81","82","83"],"import { IonBackButton, IonButton, IonButtons, IonContent, IonHeader, IonIcon, IonInput, IonItem, IonLabel, IonPage, IonSelect, IonSelectOption, IonTitle, IonToast, IonToolbar } from '@ionic/react'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Camera, CameraResultType } from '@capacitor/camera';\nimport { useHistory } from 'react-router';\n\n\nconst EditProfile: React.FC<any> = ({ user, setuser }) => {\n    const [imgFile, setimgFile] = useState<Blob>();\n    const [previewImgUrl, setpreviewImgUrl] = useState(`http://192.168.43.228:5000/${user.avatar}`);\n    const [name, setname] = useState(user.name);\n    const [age, setage] = useState(user.age);\n    const [gender, setgender] = useState(user.gender);\n    const [showToast, setshowToast] = useState(false);\n    const [toastMessage, settoastmessage] = useState(\"\");\n    const [toastType, settoastType] = useState(\"\");\n    let history = useHistory();\n    let inputref = useRef<any>();\n    console.log(\"edit rerenders\");\n    async function camerahandler() {\n        let photo = await Camera.getPhoto({\n            resultType: CameraResultType.Uri\n        });\n        let res = await fetch(photo.webPath);\n        let imgFile = await res.blob();\n        setimgFile(imgFile);\n        setpreviewImgUrl(photo.webPath);\n    }\n\n    function updateHandler() {\n        let formData = new FormData();\n        if (name == \"\") {\n            settoastType(\"danger\");\n            settoastmessage(\"Name should not be empty!\");\n            setshowToast(true);\n            return;\n        }\n        formData.append('imgFile', imgFile);\n        formData.append('name', name);\n        formData.append('age', age);\n        formData.append('gender', gender);\n        formData.append('userId', user._id);\n        let resStatus = 0;\n        fetch(\"http://192.168.43.228:5000/updateProfile\", {\n            method: 'POST',\n\n            body: formData\n        }).then(res => { resStatus = res.status; return res.json() })\n            .then(res => {\n                if (resStatus == 200) {\n                    setuser(res.user);\n                    settoastType(\"success\");\n                    settoastmessage(res.message);\n                    setshowToast(true);\n                    history.push('/profile');\n                }\n                else {\n                    settoastType(\"danger\");\n                    settoastmessage(res.error);\n                    setshowToast(true);\n                }\n            });\n    }\n    return (\n        <IonPage>\n            <IonHeader>\n                <IonToolbar>\n                    <IonButtons slot=\"start\">\n                        <IonBackButton></IonBackButton>\n                    </IonButtons>\n                    <IonTitle>Edit Profile</IonTitle>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <div className=\"text-center mt-3\">\n                    <img onClick={camerahandler} src={previewImgUrl} alt=\"\" style={{ height: \"200px\", width: \"200px\", borderRadius: \"50%\" }} />\n                    <IonItem className=\"mt-3\">\n                        <IonLabel position=\"stacked\">Name</IonLabel>\n                        <IonInput value={name} onIonChange={(e) => setname(e.detail.value)}></IonInput>\n                    </IonItem>\n                    <IonItem className=\"mt-3\">\n                        <IonLabel position=\"stacked\">Age</IonLabel>\n                        <IonInput value={age} onIonChange={(e) => setage(e.detail.value)}></IonInput>\n                    </IonItem>\n                    <IonItem className=\"mt-3\">\n                        <IonLabel position=\"stacked\">Gender</IonLabel>\n                        <IonSelect value={gender} placeholder=\"Select One\" onIonChange={e => setgender(e.detail.value)}>\n                            <IonSelectOption value=\"female\">Female</IonSelectOption>\n                            <IonSelectOption value=\"male\">Male</IonSelectOption>\n                        </IonSelect>\n                    </IonItem>\n\n        \n\n\n\n                    <IonButton size=\"default\" expand=\"block\" onClick={updateHandler} color=\"primary\">Update</IonButton>\n\n\n\n                    <IonToast\n                        isOpen={showToast}\n                        onDidDismiss={() => setshowToast(false)}\n                        message={toastMessage}\n                        duration={2000}\n                        color={toastType}\n                    />\n                </div>\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default EditProfile\n",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":22,"column":34,"nodeType":"90","endLine":22,"endColumn":44},{"ruleId":"91","severity":1,"message":"92","line":24,"column":23,"nodeType":"93","messageId":"94","endLine":24,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":1,"column":82,"nodeType":"97","messageId":"98","endLine":1,"endColumn":95},{"ruleId":"99","severity":1,"message":"100","line":9,"column":7,"nodeType":"97","messageId":"101","endLine":9,"endColumn":29},{"ruleId":"95","severity":1,"message":"102","line":15,"column":7,"nodeType":"97","messageId":"98","endLine":15,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":18,"column":15,"nodeType":"93","messageId":"94","endLine":18,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":18,"column":33,"nodeType":"93","messageId":"94","endLine":18,"endColumn":35},{"ruleId":"91","severity":1,"message":"92","line":33,"column":23,"nodeType":"93","messageId":"94","endLine":33,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":18,"column":14,"nodeType":"93","messageId":"94","endLine":18,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":18,"column":29,"nodeType":"93","messageId":"94","endLine":18,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":18,"column":47,"nodeType":"93","messageId":"94","endLine":18,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":18,"column":72,"nodeType":"93","messageId":"94","endLine":18,"endColumn":74},{"ruleId":"91","severity":1,"message":"103","line":24,"column":18,"nodeType":"93","messageId":"94","endLine":24,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":40,"column":23,"nodeType":"93","messageId":"94","endLine":40,"endColumn":25},{"ruleId":"95","severity":1,"message":"104","line":1,"column":94,"nodeType":"97","messageId":"98","endLine":1,"endColumn":104},{"ruleId":"95","severity":1,"message":"105","line":1,"column":138,"nodeType":"97","messageId":"98","endLine":1,"endColumn":157},{"ruleId":"95","severity":1,"message":"102","line":19,"column":7,"nodeType":"97","messageId":"98","endLine":19,"endColumn":14},{"ruleId":"95","severity":1,"message":"106","line":21,"column":12,"nodeType":"97","messageId":"98","endLine":21,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":52,"column":15,"nodeType":"93","messageId":"94","endLine":52,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":68,"column":23,"nodeType":"93","messageId":"94","endLine":68,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":96,"column":15,"nodeType":"93","messageId":"94","endLine":96,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":96,"column":36,"nodeType":"93","messageId":"94","endLine":96,"endColumn":38},{"ruleId":"91","severity":1,"message":"92","line":118,"column":23,"nodeType":"93","messageId":"94","endLine":118,"endColumn":25},{"ruleId":"95","severity":1,"message":"107","line":1,"column":25,"nodeType":"97","messageId":"98","endLine":1,"endColumn":34},{"ruleId":"95","severity":1,"message":"108","line":1,"column":102,"nodeType":"97","messageId":"98","endLine":1,"endColumn":110},{"ruleId":"95","severity":1,"message":"109","line":1,"column":112,"nodeType":"97","messageId":"98","endLine":1,"endColumn":119},{"ruleId":"95","severity":1,"message":"110","line":1,"column":121,"nodeType":"97","messageId":"98","endLine":1,"endColumn":129},{"ruleId":"95","severity":1,"message":"111","line":1,"column":150,"nodeType":"97","messageId":"98","endLine":1,"endColumn":158},{"ruleId":"95","severity":1,"message":"112","line":1,"column":71,"nodeType":"97","messageId":"98","endLine":1,"endColumn":78},{"ruleId":"95","severity":1,"message":"113","line":2,"column":17,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"95","severity":1,"message":"114","line":17,"column":9,"nodeType":"97","messageId":"98","endLine":17,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":31,"column":18,"nodeType":"93","messageId":"94","endLine":31,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":49,"column":31,"nodeType":"93","messageId":"94","endLine":49,"endColumn":33},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","Assignments to the 'resStatus' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'IonRouterLink' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-redeclare","'Login' is already defined.","redeclared","'history' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'IonSpinner' is defined but never used.","'useIonViewWillEnter' is defined but never used.","'resetfields' is defined but never used.","'IonButton' is defined but never used.","'IonInput' is defined but never used.","'IonItem' is defined but never used.","'IonLabel' is defined but never used.","'IonToast' is defined but never used.","'IonIcon' is defined but never used.","'useEffect' is defined but never used.","'inputref' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]