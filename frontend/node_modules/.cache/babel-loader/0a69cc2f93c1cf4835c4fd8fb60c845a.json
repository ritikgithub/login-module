{"ast":null,"code":"var _jsxFileName = \"/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Profile from './pages/Profile';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [LoggedIn, setLoggedIn] = useState(false);\n  const [user, setuser] = useState({});\n  let resStatus = 0;\n  useEffect(() => {\n    fetch(\"http://192.168.43.228:5000/isAuthenticated\", {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      resStatus = res.status;\n      return res.json();\n    }).then(res => {\n      if (resStatus == 200) {\n        setLoggedIn(true);\n        setuser(res.user);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(IonApp, {\n    children: /*#__PURE__*/_jsxDEV(IonReactRouter, {\n      children: /*#__PURE__*/_jsxDEV(IonRouterOutlet, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"CwBwZYaER6X9Qx6gnBKg0Aa/S1I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/App.tsx"],"names":["Route","IonApp","IonRouterOutlet","IonReactRouter","Profile","useEffect","useState","App","LoggedIn","setLoggedIn","user","setuser","resStatus","fetch","method","headers","localStorage","getItem","then","res","status","json"],"mappings":";;;AAAA,SAAmBA,KAAnB,QAAgC,kBAAhC;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,cAAxC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAKA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIM,SAAS,GAAG,CAAhB;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDC,MAAAA,MAAM,EAAE,MAD0C;AAElDC,MAAAA,OAAO,EAAE;AACP,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AAFyC,KAA/C,CAAL,CAKGC,IALH,CAKQC,GAAG,IAAI;AAAEP,MAAAA,SAAS,GAAGO,GAAG,CAACC,MAAhB;AAAwB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AAAmB,KAL5D,EAMGH,IANH,CAMQC,GAAG,IAAI;AACX,UAAIP,SAAS,IAAI,GAAjB,EAAsB;AACpBH,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,QAAAA,OAAO,CAACQ,GAAG,CAACT,IAAL,CAAP;AACD;AACF,KAXH;AAYD,GAbQ,EAaN,EAbM,CAAT;AAcA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,cAAD;AAAA,6BACE,QAAC,eAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,iCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAzCD;;GAAMH,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport Register from './pages/Register';\nimport ForgotPassword from './pages/ForgotPassword';\nimport Profile from './pages/Profile';\nimport { useEffect, useState } from 'react';\n\nconst App: React.FC = () => {\n  const [LoggedIn, setLoggedIn] = useState(false);\n  const [user, setuser] = useState({});\n  let resStatus = 0;\n  useEffect(() => {\n    fetch(\"http://192.168.43.228:5000/isAuthenticated\", {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => { resStatus = res.status; return res.json() })\n      .then(res => {\n        if (resStatus == 200) {\n          setLoggedIn(true);\n          setuser(res.user);\n        }\n      });\n  }, [])\n  return (\n    <IonApp>\n      <IonReactRouter>\n        <IonRouterOutlet>\n          <Route exact path=\"/\">\n            <Profile />\n          </Route>\n          {/* <Route exact path=\"/\">\n            {LoggedIn ? <Home /> : <Redirect to=\"/login\" />}\n          </Route>\n          <Route exact path=\"/login\" render={(props) => LoggedIn ? <Redirect to=\"/\" /> : <Login {...props} setLoggedIn={setLoggedIn} /> } />\n         \n          <Route exact path=\"/register\">\n            {LoggedIn ? <Redirect to=\"/\" /> : <Register />}\n          </Route>\n          <Route exact path=\"/forgotpassword\">\n          {LoggedIn ? <Redirect to=\"/\" /> : <ForgotPassword />}\n          </Route> */}\n        </IonRouterOutlet>\n      </IonReactRouter>\n\n    </IonApp>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}