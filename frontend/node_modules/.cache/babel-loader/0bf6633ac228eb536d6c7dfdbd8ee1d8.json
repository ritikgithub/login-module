{"ast":null,"code":"var _jsxFileName = \"/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButton, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonPage, IonTitle, IonToast, IonToolbar } from '@ionic/react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  setLoggedIn,\n  setuser\n}) => {\n  _s();\n\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [showToast, setshowToast] = useState(false);\n  const [toastMessage, settoastmessage] = useState(\"\");\n  const [toastType, settoastType] = useState(\"\");\n  let history = useHistory();\n\n  const LoginHandler = () => {\n    if (email == \"\" || password == \"\") {\n      settoastType(\"danger\");\n      settoastmessage(\"All fields are mandatory\");\n      setshowToast(true);\n      return;\n    }\n\n    let resStatus = 0;\n    fetch(\"http://192.168.43.228:5000/login\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => {\n      resStatus = res.status;\n      return res.json();\n    }).then(res => {\n      if (resStatus == 200) {\n        settoastType(\"success\");\n        settoastmessage(res.message);\n        setshowToast(true);\n        localStorage.setItem('token', res.token);\n        setLoggedIn(true);\n        setuser(res.user);\n      } else {\n        settoastType(\"danger\");\n        settoastmessage(res.error);\n        setshowToast(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      className: \"ion-padding-top\",\n      children: [/*#__PURE__*/_jsxDEV(IonItem, {\n        children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n          position: \"stacked\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n          value: email,\n          onIonChange: e => setemail(e.detail.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n        children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n          position: \"stacked\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n          type: \"password\",\n          value: password,\n          onIonChange: e => setpassword(e.detail.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n        size: \"default\",\n        expand: \"block\",\n        onClick: LoginHandler,\n        color: \"primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n        fill: \"clear\",\n        routerLink: \"/register\",\n        children: \"Create a New Account??\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n        fill: \"clear\",\n        routerLink: \"/forgotpassword\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonToast, {\n        isOpen: showToast,\n        onDidDismiss: () => setshowToast(false),\n        message: toastMessage,\n        duration: 2000,\n        color: toastType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"CVR7sutIkwihSswQqQtgObz7Rs4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Login.tsx"],"names":["IonButton","IonContent","IonHeader","IonInput","IonItem","IonLabel","IonPage","IonTitle","IonToast","IonToolbar","useState","useHistory","Login","setLoggedIn","setuser","email","setemail","password","setpassword","showToast","setshowToast","toastMessage","settoastmessage","toastType","settoastType","history","LoginHandler","resStatus","fetch","method","headers","body","JSON","stringify","then","res","status","json","message","localStorage","setItem","token","user","error","e","detail","value"],"mappings":"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","sourcesContent":["import { IonButton, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonPage, IonRouterLink, IonTitle, IonToast, IonToolbar } from '@ionic/react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\n\ninterface Login {\n  setLoggedIn : Function,\n  setuser: Function\n}\nconst Login: React.FC<Login> = ({setLoggedIn, setuser})  => {\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [showToast, setshowToast] = useState(false);\n  const [toastMessage, settoastmessage] = useState(\"\");\n  const [toastType, settoastType] = useState(\"\");\n  let history = useHistory();\n\n  const LoginHandler = () => {\n    if (email == \"\" || password == \"\") {\n      settoastType(\"danger\");\n      settoastmessage(\"All fields are mandatory\");\n      setshowToast(true);\n      return;\n    }\n    let resStatus = 0;\n    fetch(\"http://192.168.43.228:5000/login\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email, password })\n    }).then(res => { resStatus = res.status; return res.json() })\n      .then(res => {\n        if (resStatus == 200) {\n          settoastType(\"success\");\n          settoastmessage(res.message);\n          setshowToast(true);\n          localStorage.setItem('token', res.token);\n          setLoggedIn(true);\n          setuser(res.user);\n        }\n        else {\n          settoastType(\"danger\");\n          settoastmessage(res.error);\n          setshowToast(true);\n        }\n      });\n  }\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Login</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"ion-padding-top\">\n        <IonItem>\n          <IonLabel position=\"stacked\">Email</IonLabel>\n          <IonInput value={email} onIonChange={(e) => setemail(e.detail.value)}></IonInput>\n        </IonItem>\n        <IonItem>\n          <IonLabel position=\"stacked\">Password</IonLabel>\n          <IonInput type=\"password\" value={password} onIonChange={(e) => setpassword(e.detail.value)}></IonInput>\n        </IonItem>\n        <IonButton size=\"default\" expand=\"block\" onClick={LoginHandler} color=\"primary\">Login</IonButton>\n        <IonButton fill=\"clear\" routerLink=\"/register\">Create a New Account??</IonButton>\n        <IonButton fill=\"clear\" routerLink=\"/forgotpassword\">Forgot Password?</IonButton>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setshowToast(false)}\n          message={toastMessage}\n          duration={2000}\n          color={toastType}\n        />\n      </IonContent>\n\n    </IonPage>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}