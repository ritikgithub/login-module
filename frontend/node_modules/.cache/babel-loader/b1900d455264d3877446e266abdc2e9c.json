{"ast":null,"code":"var _jsxFileName = \"/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButton, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonPage, IonTitle, IonToast, IonToolbar } from '@ionic/react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [showToast, setshowToast] = useState(false);\n  const [message, setmessage] = useState(\"\");\n\n  const LoginHandler = () => {\n    fetch(\"http://localhost:5000/login\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => console.log(res));\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      className: \"ion-padding-top\",\n      children: [/*#__PURE__*/_jsxDEV(IonItem, {\n        children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n          position: \"stacked\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n          value: email,\n          onIonChange: e => setemail(e.detail.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n        children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n          position: \"stacked\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n          type: \"password\",\n          value: password,\n          onIonChange: e => setpassword(e.detail.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n        size: \"default\",\n        expand: \"block\",\n        onClick: LoginHandler,\n        color: \"primary\",\n        children: \"Primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonToast, {\n        isOpen: showToast,\n        onDidDismiss: () => setshowToast(false),\n        message: message,\n        duration: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"KkkRFVX2sOnbMBimBEvh+oQYwqw=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/Login.tsx"],"names":["IonButton","IonContent","IonHeader","IonInput","IonItem","IonLabel","IonPage","IonTitle","IonToast","IonToolbar","useState","Login","email","setemail","password","setpassword","showToast","setshowToast","message","setmessage","LoginHandler","fetch","method","headers","body","JSON","stringify","then","res","console","log","e","detail","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,SAAhC,EAA2CC,QAA3C,EAAqDC,OAArD,EAA8DC,QAA9D,EAAwEC,OAAxE,EAAiFC,QAAjF,EAA2FC,QAA3F,EAAqGC,UAArG,QAAuH,cAAvH;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACzBC,IAAAA,KAAK,CAAC,6BAAD,EAA+B;AAClCC,MAAAA,MAAM,EAAC,MAD2B;AAElCC,MAAAA,OAAO,EAAG;AACR,wBAAgB;AADR,OAFwB;AAKlCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACd,QAAAA,KAAD;AAAOE,QAAAA;AAAP,OAAf;AAL4B,KAA/B,CAAL,CAMGa,IANH,CAMQC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANb;AAOD,GARD;;AAWA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,SAAD;AAAA,6BACE,QAAC,UAAD;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,iBAAtB;AAAA,8BACE,QAAC,OAAD;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEhB,KAAjB;AAAwB,UAAA,WAAW,EAAGmB,CAAD,IAAOlB,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,OAAD;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,UAAf;AAA0B,UAAA,KAAK,EAAEnB,QAAjC;AAA2C,UAAA,WAAW,EAAGiB,CAAD,IAAOhB,WAAW,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,SAAhB;AAA0B,QAAA,MAAM,EAAC,OAAjC;AAAyC,QAAA,OAAO,EAAEb,YAAlD;AAAgE,QAAA,KAAK,EAAC,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,QAAD;AACE,QAAA,MAAM,EAAEJ,SADV;AAEE,QAAA,YAAY,EAAE,MAAMC,YAAY,CAAC,KAAD,CAFlC;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,QAAQ,EAAE;AAJZ;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA3CD;;GAAMP,K;;KAAAA,K;AA6CN,eAAeA,KAAf","sourcesContent":["import { IonButton, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonPage, IonTitle, IonToast, IonToolbar } from '@ionic/react';\nimport { useState } from 'react';\n\nconst Login: React.FC = () => {\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [showToast, setshowToast] = useState(false);\n  const [message, setmessage] = useState(\"\");\n\n  const LoginHandler = () => {\n    fetch(\"http://localhost:5000/login\",{\n      method:'POST',\n      headers : {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({email,password})\n    }).then(res=>console.log(res));\n  }\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Login</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"ion-padding-top\">\n        <IonItem>\n          <IonLabel position=\"stacked\">Email</IonLabel>\n          <IonInput value={email} onIonChange={(e) => setemail(e.detail.value)}></IonInput>\n        </IonItem>\n        <IonItem>\n          <IonLabel position=\"stacked\">Password</IonLabel>\n          <IonInput type=\"password\" value={password} onIonChange={(e) => setpassword(e.detail.value)}></IonInput>\n        </IonItem>\n        <IonButton size=\"default\" expand=\"block\" onClick={LoginHandler} color=\"primary\">Primary</IonButton>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setshowToast(false)}\n          message={message}\n          duration={200}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}