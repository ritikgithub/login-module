{"ast":null,"code":"import _slicedToArray from\"/home/ritik.agarwal/Desktop/GL/login_module/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{IonButton,IonContent,IonHeader,IonInput,IonItem,IonLabel,IonLoading,IonPage,IonTitle,IonToast,IonToolbar}from'@ionic/react';import{useState}from'react';import{useHistory}from'react-router';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ForgotPassword=function ForgotPassword(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),token=_useState2[0],settoken=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setemail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),newpassword=_useState6[0],setnewpassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmpassword=_useState8[0],setconfirmpassword=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showToast=_useState10[0],setshowToast=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),toastMessage=_useState12[0],settoastmessage=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),toastType=_useState14[0],settoastType=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),emailSending=_useState16[0],setemailSending=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),emailSent=_useState18[0],setemailSent=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),passwordChanged=_useState20[0],setpasswordChanged=_useState20[1];var history=useHistory();var component;function renderComponent(){if(!emailSending&&!emailSent){console.log(\"sd\");component=sendToken();}else if(passwordChanged)component=passwordChangedSuccessfully();else if(emailSent)component=resetpassword();}renderComponent();function sendTokenHandler(){if(email==\"\"){settoastType(\"danger\");settoastmessage(\"Email should not be empty\");setshowToast(true);return;}var resStatus=0;setemailSending(true);fetch(\"http://192.168.43.228:5000/sendForgotPasswordToken\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email})}).then(function(res){resStatus=res.status;return res.json();}).then(function(res){if(resStatus==200){settoastType(\"success\");settoastmessage(res.message);setshowToast(true);setemailSent(true);setemailSending(false);}else{settoastType(\"danger\");settoastmessage(res.error);setshowToast(true);setemailSending(false);}});}function sendToken(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(IonItem,{children:[/*#__PURE__*/_jsx(IonLabel,{position:\"stacked\",children:\"Email\"}),/*#__PURE__*/_jsx(IonInput,{value:email,onIonChange:function onIonChange(e){return setemail(e.detail.value);}})]}),/*#__PURE__*/_jsx(IonButton,{size:\"default\",expand:\"block\",onClick:sendTokenHandler,color:\"primary\",children:\"Send Reset Token\"})]});}function resetPasswordHandler(){if(token==\"\"||newpassword==\"\"){settoastType(\"danger\");settoastmessage(\"All fields are mandatory\");setshowToast(true);return;}if(newpassword!==confirmpassword){settoastType(\"danger\");settoastmessage(\"Passwords Should be Matched\");setshowToast(true);return;}var resStatus=0;fetch(\"http://192.168.43.228:5000/verifyForgotPasswordDetails\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({token:token,password:newpassword})}).then(function(res){resStatus=res.status;return res.json();}).then(function(res){if(resStatus==200){settoastType(\"success\");settoastmessage(res.message);setshowToast(true);setpasswordChanged(true);}else{settoastType(\"danger\");settoastmessage(res.error);setshowToast(true);}});}function resetfields(){setemailSent(false);setemailSending(false);setpasswordChanged(false);}function passwordChangedSuccessfully(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-primary h3\",children:\"Password Changed Successfully\"}),/*#__PURE__*/_jsx(IonButton,{onClick:function onClick(){resetfields();history.push(\"/login\");},fill:\"clear\",children:\"Go to Login Page\"})]});}function resetpassword(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(IonItem,{children:[/*#__PURE__*/_jsx(IonLabel,{position:\"stacked\",children:\"Token\"}),/*#__PURE__*/_jsx(IonInput,{value:token,onIonChange:function onIonChange(e){return settoken(e.detail.value);}})]}),/*#__PURE__*/_jsxs(IonItem,{children:[/*#__PURE__*/_jsx(IonLabel,{position:\"stacked\",children:\"New Password\"}),/*#__PURE__*/_jsx(IonInput,{value:newpassword,onIonChange:function onIonChange(e){return setnewpassword(e.detail.value);}})]}),/*#__PURE__*/_jsxs(IonItem,{children:[/*#__PURE__*/_jsx(IonLabel,{position:\"stacked\",children:\"Confrim Password\"}),/*#__PURE__*/_jsx(IonInput,{value:confirmpassword,onIonChange:function onIonChange(e){return setconfirmpassword(e.detail.value);}})]}),/*#__PURE__*/_jsx(IonButton,{size:\"default\",expand:\"block\",onClick:resetPasswordHandler,color:\"primary\",children:\"Set Password\"})]});}// function spinner() {\n//   return <IonSpinner name=\"crescent\" />\n// }\nreturn/*#__PURE__*/_jsxs(IonPage,{children:[/*#__PURE__*/_jsx(IonHeader,{children:/*#__PURE__*/_jsx(IonToolbar,{children:/*#__PURE__*/_jsx(IonTitle,{children:\"Forgot Password\"})})}),/*#__PURE__*/_jsxs(IonContent,{className:\"ion-padding-top\",children:[component,/*#__PURE__*/_jsx(IonToast,{isOpen:showToast,onDidDismiss:function onDidDismiss(){return setshowToast(false);},message:toastMessage,duration:2000,color:toastType}),/*#__PURE__*/_jsx(IonLoading,{isOpen:emailSending})]})]});};export default ForgotPassword;","map":{"version":3,"sources":["/home/ritik.agarwal/Desktop/GL/login_module/frontend/src/pages/ForgotPassword.tsx"],"names":["IonButton","IonContent","IonHeader","IonInput","IonItem","IonLabel","IonLoading","IonPage","IonTitle","IonToast","IonToolbar","useState","useHistory","ForgotPassword","token","settoken","email","setemail","newpassword","setnewpassword","confirmpassword","setconfirmpassword","showToast","setshowToast","toastMessage","settoastmessage","toastType","settoastType","emailSending","setemailSending","emailSent","setemailSent","passwordChanged","setpasswordChanged","history","component","renderComponent","console","log","sendToken","passwordChangedSuccessfully","resetpassword","sendTokenHandler","resStatus","fetch","method","headers","body","JSON","stringify","then","res","status","json","message","error","e","detail","value","resetPasswordHandler","password","resetfields","push"],"mappings":"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","sourcesContent":["import { IonButton, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonSpinner, IonTitle, IonToast, IonToolbar } from '@ionic/react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nconst ForgotPassword: React.FC = () => {\n  const [token, settoken] = useState(\"\")\n  const [email, setemail] = useState(\"\")\n  const [newpassword, setnewpassword] = useState(\"\");\n  const [confirmpassword, setconfirmpassword] = useState(\"\");\n\n  const [showToast, setshowToast] = useState(false);\n  const [toastMessage, settoastmessage] = useState(\"\");\n  const [toastType, settoastType] = useState(\"\");\n\n  const [emailSending, setemailSending] = useState(false);\n  const [emailSent, setemailSent] = useState(false);\n  const [passwordChanged, setpasswordChanged] = useState(false);\n  let history = useHistory();\n  let component;\n  function renderComponent() {\n\n    if (!emailSending && !emailSent) {\n      console.log(\"sd\");\n      component = sendToken();\n    }\n\n    else if (passwordChanged)\n      component = passwordChangedSuccessfully();\n    else if (emailSent)\n      component = resetpassword();\n\n  }\n  renderComponent();\n\n  function sendTokenHandler() {\n    if (email == \"\") {\n      settoastType(\"danger\");\n      settoastmessage(\"Email should not be empty\");\n      setshowToast(true);\n      return;\n    }\n    let resStatus = 0;\n    setemailSending(true);\n    fetch(\"http://192.168.43.228:5000/sendForgotPasswordToken\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email })\n    }).then(res => { resStatus = res.status; return res.json() })\n      .then(res => {\n        if (resStatus == 200) {\n          settoastType(\"success\");\n          settoastmessage(res.message);\n          setshowToast(true);\n          setemailSent(true);\n          setemailSending(false);\n        }\n        else {\n          settoastType(\"danger\");\n          settoastmessage(res.error);\n          setshowToast(true);\n          setemailSending(false);\n        }\n      });\n  }\n\n  function sendToken() {\n    return (<div>\n      <IonItem>\n        <IonLabel position=\"stacked\">Email</IonLabel>\n        <IonInput value={email} onIonChange={(e) => setemail(e.detail.value)}></IonInput>\n      </IonItem>\n      <IonButton size=\"default\" expand=\"block\" onClick={sendTokenHandler} color=\"primary\">Send Reset Token</IonButton>\n    </div>\n    )\n  }\n\n  function resetPasswordHandler() {\n    if (token == \"\" || newpassword == \"\") {\n      settoastType(\"danger\");\n      settoastmessage(\"All fields are mandatory\");\n      setshowToast(true);\n      return;\n    }\n    if (newpassword !== confirmpassword) {\n      settoastType(\"danger\");\n      settoastmessage(\"Passwords Should be Matched\");\n      setshowToast(true);\n      return;\n    }\n\n    let resStatus = 0;\n    fetch(\"http://192.168.43.228:5000/verifyForgotPasswordDetails\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ token, password: newpassword })\n    }).then(res => { resStatus = res.status; return res.json() })\n      .then(res => {\n        if (resStatus == 200) {\n          settoastType(\"success\");\n          settoastmessage(res.message);\n          setshowToast(true);\n          setpasswordChanged(true);\n        }\n        else {\n          settoastType(\"danger\");\n          settoastmessage(res.error);\n          setshowToast(true);\n        }\n      });\n  }\n\n  function resetfields() {\n    setemailSent(false);\n    setemailSending(false);\n    setpasswordChanged(false);\n  }\n\n  function passwordChangedSuccessfully() {\n    return (\n      <div>\n        <div className=\"text-primary h3\">\n          Password Changed Successfully\n        </div>\n        <IonButton onClick={()=> {resetfields(); history.push(\"/login\");}} fill=\"clear\">Go to Login Page</IonButton>\n      </div>\n    )\n  }\n\n  function resetpassword() {\n    return (<div>\n      <IonItem>\n        <IonLabel position=\"stacked\">Token</IonLabel>\n        <IonInput value={token} onIonChange={(e) => settoken(e.detail.value)}></IonInput>\n      </IonItem>\n      <IonItem>\n        <IonLabel position=\"stacked\">New Password</IonLabel>\n        <IonInput value={newpassword} onIonChange={(e) => setnewpassword(e.detail.value)}></IonInput>\n      </IonItem>\n      <IonItem>\n        <IonLabel position=\"stacked\">Confrim Password</IonLabel>\n        <IonInput value={confirmpassword} onIonChange={(e) => setconfirmpassword(e.detail.value)}></IonInput>\n      </IonItem>\n      <IonButton size=\"default\" expand=\"block\" onClick={resetPasswordHandler} color=\"primary\">Set Password</IonButton>\n    \n    </div>)\n  }\n\n\n  // function spinner() {\n  //   return <IonSpinner name=\"crescent\" />\n  // }\n\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Forgot Password</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"ion-padding-top\">\n\n\n        {component}\n\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setshowToast(false)}\n          message={toastMessage}\n          duration={2000}\n          color={toastType}\n        />\n          <IonLoading isOpen={emailSending} />\n      </IonContent>\n\n    </IonPage>\n  );\n};\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}